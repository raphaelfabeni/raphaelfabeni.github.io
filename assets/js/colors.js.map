{"version":3,"sources":["es6/colors.js"],"names":["changeColor","init","btn","hold","arrColors","prepare","bind","render","elements","btnColor","document","getElementById","holdColor","colors","state","getInitialState","localColor","hasLocalColor","currentColor","getColor","getAttribute","randomColor","random","Math","floor","length","exclude","setState","setLocal","localStorage","setItem","getItem","addEventListener","console","log","setAttribute"],"mappings":";;AAAA,IAAIA,cAAc;AAEhBC,MAFgB,gBAEXC,GAFW,EAENC,IAFM,EAEAC,SAFA,EAEW;AACzB,SAAKC,OAAL,CAAaH,GAAb,EAAkBC,IAAlB,EAAwBC,SAAxB;AACA,SAAKE,IAAL;AACA,SAAKC,MAAL;AACD,GANe;AAQhBF,SARgB,mBAQRH,GARQ,EAQHC,IARG,EAQGC,SARH,EAQc;AAC5B,SAAKI,QAAL,GAAgB,EAAhB;AACA,SAAKA,QAAL,CAAcC,QAAd,GAAyBP,OAAOQ,SAASC,cAAT,CAAwB,OAAxB,CAAhC;AACA,SAAKH,QAAL,CAAcI,SAAd,GAA0BT,QAAQO,SAASC,cAAT,CAAwB,MAAxB,CAAlC;;AAEA,SAAKE,MAAL,GAAcT,aAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,QAArC,CAA3B;AACA,SAAKU,KAAL,GAAa,KAAKC,eAAL,EAAb;AACD,GAfe;AAiBhBA,iBAjBgB,6BAiBE;AAChB,QAAIC,aAAa,KAAKC,aAAL,EAAjB;AACA,WAAO;AACLC,oBAAeF,UAAD,GAAeA,UAAf,GAA4B,KAAKG,QAAL;AADrC,KAAP;AAGD,GAtBe;AAwBhBA,UAxBgB,sBAwBL;AACT,WAAO,KAAKX,QAAL,CAAcI,SAAd,CAAwBQ,YAAxB,CAAqC,YAArC,CAAP;AACD,GA1Be;AA4BhBC,aA5BgB,yBA4BF;AACZ,QAAIC,SAAU,KAAKT,MAAL,CAAaU,KAAKC,KAAL,CAAWD,KAAKD,MAAL,KAAgB,KAAKT,MAAL,CAAYY,MAAvC,CAAb,CAAd;AAAA,QACIC,UAAU,KAAKP,QAAL,EADd;;AAGA,QAAGG,WAAWI,OAAd,EAAuB;AACrB,WAAKL,WAAL;AACD,KAFD,MAEO;AACL,aAAOC,MAAP;AACD;AACF,GArCe;AAuChBK,UAvCgB,sBAuCL;AACT,SAAKb,KAAL,CAAWI,YAAX,GAA0B,KAAKG,WAAL,EAA1B;AACD,GAzCe;AA2ChBO,UA3CgB,sBA2CL;AACTC,iBAAaC,OAAb,CAAqB,WAArB,EAAkC,KAAKhB,KAAL,CAAWI,YAA7C;AACD,GA7Ce;AA+ChBD,eA/CgB,2BA+CA;AACd,WAAOY,aAAaE,OAAb,CAAqB,WAArB,CAAP;AACD,GAjDe;AAmDhBzB,MAnDgB,kBAmDT;AAAA;;AACL,SAAKE,QAAL,CAAcC,QAAd,CAAuBuB,gBAAvB,CAAwC,OAAxC,EAAiD,YAAM;AACrDC,cAAQC,GAAR;AACA,YAAKP,QAAL;AACA,YAAKpB,MAAL;AACA,YAAKqB,QAAL;AACD,KALD;AAMD,GA1De;AA4DhBrB,QA5DgB,oBA4DP;AACP,SAAKC,QAAL,CAAcI,SAAd,CAAwBuB,YAAxB,CAAqC,YAArC,EAAmD,KAAKrB,KAAL,CAAWI,YAA9D;AACD;AA9De,CAAlB","file":"colors.js","sourcesContent":["var changeColor = {\n\n  init(btn, hold, arrColors) {\n    this.prepare(btn, hold, arrColors);\n    this.bind();\n    this.render();\n  },\n\n  prepare(btn, hold, arrColors) {\n    this.elements = {};\n    this.elements.btnColor = btn || document.getElementById('color');\n    this.elements.holdColor = hold || document.getElementById('hold');\n\n    this.colors = arrColors || ['default', 'gray', 'brown', 'blue', 'purple'];\n    this.state = this.getInitialState();\n  },\n\n  getInitialState() {\n    let localColor = this.hasLocalColor();\n    return {\n      currentColor: (localColor) ? localColor : this.getColor()\n    };\n  },\n\n  getColor() {\n    return this.elements.holdColor.getAttribute('data-color');\n  },\n\n  randomColor() {\n    let random  = this.colors[ Math.floor(Math.random() * this.colors.length)],\n        exclude = this.getColor();\n\n    if(random === exclude) {\n      this.randomColor(); \n    } else {\n      return random;\n    }\n  },\n\n  setState() {\n    this.state.currentColor = this.randomColor();\n  },\n\n  setLocal() {\n    localStorage.setItem('userColor', this.state.currentColor);\n  },\n\n  hasLocalColor() {\n    return localStorage.getItem('userColor');\n  },\n\n  bind() {\n    this.elements.btnColor.addEventListener('click', () => {\n      console.log(this);\n      this.setState();\n      this.render();\n      this.setLocal();\n    });\n  },\n\n  render() {\n    this.elements.holdColor.setAttribute('data-color', this.state.currentColor); \n  }\n};"]}