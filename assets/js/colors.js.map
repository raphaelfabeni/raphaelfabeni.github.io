{"version":3,"sources":["es6/colors.js"],"names":[],"mappings":";;AAAA,IAAI,cAAc;AAEhB,sBAAK,KAAK,MAAM,WAAW;AACzB,SAAK,OAAL,CAAa,GAAb,EAAkB,IAAlB,EAAwB,SAAxB,EADyB;AAEzB,SAAK,IAAL,GAFyB;AAGzB,SAAK,MAAL,GAHyB;GAFX;AAQhB,4BAAQ,KAAK,MAAM,WAAW;AAC5B,SAAK,QAAL,GAAgB,EAAhB,CAD4B;AAE5B,SAAK,QAAL,CAAc,QAAd,GAAyB,OAAO,SAAS,cAAT,CAAwB,OAAxB,CAAP,CAFG;AAG5B,SAAK,QAAL,CAAc,SAAd,GAA0B,QAAQ,SAAS,cAAT,CAAwB,MAAxB,CAAR,CAHE;;AAK5B,SAAK,MAAL,GAAc,aAAa,CAAC,SAAD,EAAY,MAAZ,EAAoB,OAApB,EAA6B,MAA7B,EAAqC,QAArC,CAAb,CALc;AAM5B,SAAK,KAAL,GAAa,KAAK,eAAL,EAAb,CAN4B;GARd;AAiBhB,8CAAkB;AAChB,QAAI,aAAa,KAAK,aAAL,EAAb,CADY;AAEhB,WAAO;AACL,oBAAc,aAAe,UAAf,GAA4B,KAAK,QAAL,EAA5B;KADhB,CAFgB;GAjBF;AAwBhB,gCAAW;AACT,WAAO,KAAK,QAAL,CAAc,SAAd,CAAwB,YAAxB,CAAqC,YAArC,CAAP,CADS;GAxBK;AA4BhB,sCAAc;AACZ,QAAI,SAAU,KAAK,MAAL,CAAa,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,MAAL,CAAY,MAAZ,CAAxC,CAAV;QACA,UAAU,KAAK,QAAL,EAAV,CAFQ;;AAIZ,QAAG,WAAW,OAAX,EAAoB;AACrB,WAAK,WAAL,GADqB;KAAvB,MAEO;AACL,aAAO,MAAP,CADK;KAFP;GAhCc;AAuChB,gCAAW;AACT,SAAK,KAAL,CAAW,YAAX,GAA0B,KAAK,WAAL,EAA1B,CADS;GAvCK;AA2ChB,gCAAW;AACT,iBAAa,OAAb,CAAqB,WAArB,EAAkC,KAAK,KAAL,CAAW,YAAX,CAAlC,CADS;GA3CK;AA+ChB,0CAAgB;AACd,WAAO,aAAa,OAAb,CAAqB,WAArB,CAAP,CADc;GA/CA;AAmDhB,wBAAO;;;AACL,SAAK,QAAL,CAAc,QAAd,CAAuB,gBAAvB,CAAwC,OAAxC,EAAiD,YAAM;AACrD,cAAQ,GAAR,QADqD;AAErD,YAAK,QAAL,GAFqD;AAGrD,YAAK,MAAL,GAHqD;AAIrD,YAAK,QAAL,GAJqD;KAAN,CAAjD,CADK;GAnDS;AA4DhB,4BAAS;AACP,SAAK,QAAL,CAAc,SAAd,CAAwB,YAAxB,CAAqC,YAArC,EAAmD,KAAK,KAAL,CAAW,YAAX,CAAnD,CADO;GA5DO;CAAd","file":"colors.js","sourcesContent":["var changeColor = {\n\n  init(btn, hold, arrColors) {\n    this.prepare(btn, hold, arrColors);\n    this.bind();\n    this.render();\n  },\n\n  prepare(btn, hold, arrColors) {\n    this.elements = {};\n    this.elements.btnColor = btn || document.getElementById('color');\n    this.elements.holdColor = hold || document.getElementById('hold');\n\n    this.colors = arrColors || ['default', 'gray', 'brown', 'blue', 'purple'];\n    this.state = this.getInitialState();\n  },\n\n  getInitialState() {\n    let localColor = this.hasLocalColor();\n    return {\n      currentColor: (localColor) ? localColor : this.getColor()\n    };\n  },\n\n  getColor() {\n    return this.elements.holdColor.getAttribute('data-color');\n  },\n\n  randomColor() {\n    let random  = this.colors[ Math.floor(Math.random() * this.colors.length)],\n        exclude = this.getColor();\n\n    if(random === exclude) {\n      this.randomColor(); \n    } else {\n      return random;\n    }\n  },\n\n  setState() {\n    this.state.currentColor = this.randomColor();\n  },\n\n  setLocal() {\n    localStorage.setItem('userColor', this.state.currentColor);\n  },\n\n  hasLocalColor() {\n    return localStorage.getItem('userColor');\n  },\n\n  bind() {\n    this.elements.btnColor.addEventListener('click', () => {\n      console.log(this);\n      this.setState();\n      this.render();\n      this.setLocal();\n    });\n  },\n\n  render() {\n    this.elements.holdColor.setAttribute('data-color', this.state.currentColor); \n  }\n};"]}